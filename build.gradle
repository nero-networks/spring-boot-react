buildscript {
  ext {
    appVersion = '0.1.0-SNAPSHOT' // also change the version in webapp/package.json for consistency

    gradleWrapperVersion = '4.6'
    springBootVersion = '2.0.2.RELEASE'
    checkstyleToolVersion = '8.10.1'
  }

  repositories {
    mavenCentral()
    maven { url "https://plugins.gradle.org/m2/" }
  }
  dependencies {
    classpath "org.springframework.boot:spring-boot-gradle-plugin:$rootProject.ext.springBootVersion"
  }
}

task wrapper(type: Wrapper) {
  gradleVersion = gradleWrapperVersion
}

apply plugin: 'checkstyle'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

checkstyle { toolVersion checkstyleToolVersion }

repositories {
  jcenter()
  maven { url "http://repo.spring.io/snapshot" }
  maven { url "http://repo.spring.io/milestone" }
}

dependencies {
  compile 'com.h2database:h2'
  compile 'org.springframework.boot:spring-boot-starter-data-jpa'
  compile 'org.springframework.boot:spring-boot-starter-data-redis'
  compile 'org.springframework.boot:spring-boot-starter-security'
  compile 'org.springframework.boot:spring-boot-starter-web'

  compile 'org.springframework.session:spring-session-data-redis'

  runtime 'org.springframework.boot:spring-boot-devtools'

  testCompile 'org.springframework.boot:spring-boot-starter-test'
}

sourceSets {
  main {
    java { srcDir 'src/main/java' }
    resources { srcDir 'src/main/resources' }
  }
}

bootJar {
  baseName = 'spring-boot-react-app'
  version = appVersion
}

/*
  webapp build helper
 */

task webpackWatch(type:Exec) {
  workingDir 'webapp'
  commandLine('npm', 'run', 'webpack_watch')
}

task npmInstall(type:Exec) {
  workingDir 'webapp'
  commandLine('npm', 'install')
}

task webpack(type:Exec) {
  workingDir 'webapp'
  commandLine('npm', 'run', 'webpack')
}

task cleanWebapp(type:Exec) {
  dependsOn 'cleanStatic'
  workingDir 'webapp'
  commandLine('npm', 'run', 'clean')
}

task cleanStatic(type:Delete) {
  delete 'src/main/resources/static'
}

task copyWebappStaticResources(type:Exec) {
  workingDir 'webapp'
  commandLine('npm', 'run', 'statics')
}

task processWebappResources(type:Copy) {
  dependsOn 'copyWebappStaticResources'
  from 'webapp/dist'
  into 'src/main/resources/static'
}

task buildRelease() {
  dependsOn('webpack', 'npmInstall')
  finalizedBy bootJar
}

/*
  default tasks dependencies
 */
clean.dependsOn 'cleanWebapp'
processResources.dependsOn 'processWebappResources'
